{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\GitHub\\\\interculturality-game\\\\src\\\\components\\\\TrueFalseQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrueFalseQuestion = ({\n  question,\n  retryQuestion,\n  onAnswer\n}) => {\n  _s();\n  const [answered, setAnswered] = useState(false); // État pour gérer si l'utilisateur a répondu à la première question\n  const [retryMode, setRetryMode] = useState(false); // Mode retry pour afficher la deuxième question\n  const [showRetryExplanation, setShowRetryExplanation] = useState(false); // Affiche le texte explicatif après une mauvaise réponse\n  const [resultMessage, setResultMessage] = useState(''); // Message personnalisé à afficher après la première réponse\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false); // Pour afficher un message de réussite\n\n  // Gère la réponse à la première question\n  const handleAnswer = isTrue => {\n    setAnswered(true);\n    if (isTrue === question.correct) {\n      setResultMessage('Bravo ! Vous avez raison.');\n      setShowSuccessMessage(true); // Affiche le message de réussite\n    } else {\n      setResultMessage('Dommage ! Ce n’est pas la bonne réponse.');\n      setShowRetryExplanation(true); // Affiche le texte explicatif en cas de mauvaise réponse\n    }\n  };\n\n  // Passe à la question de retry après le message explicatif\n  const handleRetryExplanationEnd = () => {\n    setShowRetryExplanation(false); // Cache le texte explicatif\n    setRetryMode(true); // Active le mode retry pour afficher la deuxième question\n  };\n\n  // Gère la réponse à la question de retry\n  const handleRetryAnswer = isTrue => {\n    if (isTrue === retryQuestion.correct) {\n      setResultMessage('Bravo ! Vous avez bien répondu à la deuxième question.');\n      setShowSuccessMessage(true); // Affiche le message de réussite après la question de retry\n    } else {\n      setResultMessage('Dommage ! Ce n’était toujours pas la bonne réponse.');\n    }\n    setRetryMode(false); // Termine le mode retry après la deuxième question\n  };\n\n  // Fonction pour continuer après avoir affiché le message de réussite\n  const handleContinue = () => {\n    setShowSuccessMessage(false); // Cache le message de réussite\n    onAnswer(true); // Informe l'App que l'utilisateur a répondu correctement (soit à la première soit à la deuxième question)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"true-false-question\",\n    children: [!answered && !retryMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(true),\n        children: \"Vrai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(false),\n        children: \"Faux\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), answered && !retryMode && !showRetryExplanation && !showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: resultMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), showRetryExplanation && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Dommage, vous n'avez pas bien r\\xE9pondu \\xE0 la premi\\xE8re question. Nous vous proposons une autre question.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetryExplanationEnd,\n        children: \"Continuer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), retryMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: retryQuestion.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRetryAnswer(true),\n        children: \"Vrai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRetryAnswer(false),\n        children: \"Faux\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: resultMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleContinue,\n        children: \"Continuer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TrueFalseQuestion, \"mW+QwoSkI5/+Is336YEeG8CKuU4=\");\n_c = TrueFalseQuestion;\nexport default TrueFalseQuestion;\nvar _c;\n$RefreshReg$(_c, \"TrueFalseQuestion\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TrueFalseQuestion","question","retryQuestion","onAnswer","_s","answered","setAnswered","retryMode","setRetryMode","showRetryExplanation","setShowRetryExplanation","resultMessage","setResultMessage","showSuccessMessage","setShowSuccessMessage","handleAnswer","isTrue","correct","handleRetryExplanationEnd","handleRetryAnswer","handleContinue","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Nathan/Documents/GitHub/interculturality-game/src/components/TrueFalseQuestion.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TrueFalseQuestion = ({ question, retryQuestion, onAnswer }) => {\r\n  const [answered, setAnswered] = useState(false);  // État pour gérer si l'utilisateur a répondu à la première question\r\n  const [retryMode, setRetryMode] = useState(false);  // Mode retry pour afficher la deuxième question\r\n  const [showRetryExplanation, setShowRetryExplanation] = useState(false);  // Affiche le texte explicatif après une mauvaise réponse\r\n  const [resultMessage, setResultMessage] = useState('');  // Message personnalisé à afficher après la première réponse\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);  // Pour afficher un message de réussite\r\n\r\n  // Gère la réponse à la première question\r\n  const handleAnswer = (isTrue) => {\r\n    setAnswered(true);\r\n    if (isTrue === question.correct) {\r\n      setResultMessage('Bravo ! Vous avez raison.');\r\n      setShowSuccessMessage(true);  // Affiche le message de réussite\r\n    } else {\r\n      setResultMessage('Dommage ! Ce n’est pas la bonne réponse.');\r\n      setShowRetryExplanation(true);  // Affiche le texte explicatif en cas de mauvaise réponse\r\n    }\r\n  };\r\n\r\n  // Passe à la question de retry après le message explicatif\r\n  const handleRetryExplanationEnd = () => {\r\n    setShowRetryExplanation(false);  // Cache le texte explicatif\r\n    setRetryMode(true);  // Active le mode retry pour afficher la deuxième question\r\n  };\r\n\r\n  // Gère la réponse à la question de retry\r\n  const handleRetryAnswer = (isTrue) => {\r\n    if (isTrue === retryQuestion.correct) {\r\n      setResultMessage('Bravo ! Vous avez bien répondu à la deuxième question.');\r\n      setShowSuccessMessage(true);  // Affiche le message de réussite après la question de retry\r\n    } else {\r\n      setResultMessage('Dommage ! Ce n’était toujours pas la bonne réponse.');\r\n    }\r\n    setRetryMode(false);  // Termine le mode retry après la deuxième question\r\n  };\r\n\r\n  // Fonction pour continuer après avoir affiché le message de réussite\r\n  const handleContinue = () => {\r\n    setShowSuccessMessage(false);  // Cache le message de réussite\r\n    onAnswer(true);  // Informe l'App que l'utilisateur a répondu correctement (soit à la première soit à la deuxième question)\r\n  };\r\n\r\n  return (\r\n    <div className=\"true-false-question\">\r\n      {/* Affiche la première question */}\r\n      {!answered && !retryMode && (\r\n        <div>\r\n          <p>{question.text}</p>\r\n          <button onClick={() => handleAnswer(true)}>Vrai</button>\r\n          <button onClick={() => handleAnswer(false)}>Faux</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Affiche le message personnalisé après la première réponse */}\r\n      {answered && !retryMode && !showRetryExplanation && !showSuccessMessage && (\r\n        <div>\r\n          <p>{resultMessage}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Affiche le message explicatif après une mauvaise réponse */}\r\n      {showRetryExplanation && (\r\n        <div>\r\n          <p>Dommage, vous n'avez pas bien répondu à la première question. Nous vous proposons une autre question.</p>\r\n          <button onClick={handleRetryExplanationEnd}>Continuer</button>  {/* Bouton pour passer à la question de retry */}\r\n        </div>\r\n      )}\r\n\r\n      {/* Affiche la question de retry */}\r\n      {retryMode && (\r\n        <div>\r\n          <p>{retryQuestion.text}</p>\r\n          <button onClick={() => handleRetryAnswer(true)}>Vrai</button>\r\n          <button onClick={() => handleRetryAnswer(false)}>Faux</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Affiche le message de réussite après une bonne réponse */}\r\n      {showSuccessMessage && (\r\n        <div>\r\n          <p>{resultMessage}</p>\r\n          <button onClick={handleContinue}>Continuer</button>  {/* Bouton pour passer à l'étape suivante */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrueFalseQuestion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}